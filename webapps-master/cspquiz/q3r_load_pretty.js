var quiz_data = [ { 'choices': [ { 'feedback': 'No, a cryptographer is a person who makes up secret codes.',
                   'score': 0.0,
                   'text': 'a person who makes up secret codes'},
                 { 'feedback': "That's right! A cipher, such as the Caesar cipher, is an algorithm that is used to encrypt or scramble text so that it is unreadable unless one knows how to descrypt it. A cipher converts plaintext into ciphertext and vice versa.",
                   'score': 1.0,
                   'text': 'an algorithm that is used to scramble text so that it can be passed in secret'},
                 { 'feedback': 'That is not correct.',
                   'score': 0.0,
                   'text': 'a lock that can be used to lock a message in a lock box'},
                 { 'feedback': 'No, cipher is more specific than that.',
                   'score': 0.0,
                   'text': 'any puzzle, such as a crossword or Sudoku puzzle'}],
    'cspcode': '6.3.1H',
    'description': 'Cipher definition',
    'heading':'Cryptography',
    'question': 'A cipher is _________________________.',
    'source': 'mcsp-7',
    'type': 'Mc',
    'wrongfeedback': ''},
  { 'choices': [ { 'feedback': 'That is not correct. Some data sets are too large to fit into main memory (RAM) and have to be processed in parts.',
                   'score': 0.0,
                   'text': 'True'},
                 { 'feedback': 'Correct. Some data sets are too large to fit into RAM and therefore must be processed in parts.', 'score': 1.0, 'text': 'False'}],
    'cspcode': '0.0.0X',
    'hint':'',
    'description': 'Memory vs Storage in data processing',
    'heading':'Processing and Memory',    
    'question': 'True or false. Processing a data set requires enough memory (RAM) to store the entire entire data set.',
    'source': 'mcsp-6',
    'type': 'Mc',
    'wrongfeedback': ''},
  { 'choices': [ { 'feedback': 'This is part of the correct answer.',
                   'score': 0.5,
                   'text': 'a. Cloud computing relieves users from having to backup their own data and information.'},
                 { 'feedback': 'This is part of the correct answer.',
                   'score': 0.5,
                   'text': 'b. Cloud computing makes it easier to access information from anywhere and to share information.'},
                 { 'feedback': 'Not quite. Cloud data are stored on computers that are located in large data warehouses that are maintained by Google and other companies.',
                   'score': -1.0,
                   'text': "c. Information is stored on each user's computer. "},
                 { 'feedback': 'This is not always true. Some companies provide a certain amount of free storage and free processing, but only for relatively low volume users.',
                   'score': -1.0,
                   'text': 'd. Cloud computing is free.'}],
    'cspcode': '7.1.1D',
    'description': 'Cloud Computing Advantages',
    'heading': 'Cloud Computing',    
    'question': 'Which of the following are advantages of cloud computing?</b>',
    'source': 'mcsp-2',
    'type': 'Ma',
    'wrongfeedback': ''},
  { 'choices': [ { 'feedback': 'No. An example of a <i>sequence control structure</i> would be a simple sequence of statements.',
                   'score': 0.0,
                   'text': 'a. Sequence '},
                 { 'feedback': 'No. An example of a <i>selection control structure</i> would be an if/else statement.',
                   'score': 0.0,
                   'text': 'b. Selection '},
                 { 'feedback': 'No. <i>Recursion</i> is another type of control structure that supports iteration, but a <i>for-loop</i> is not an example of recursion.',
                   'score': 0.0,
                   'text': 'c. Recursion '},
                 { 'feedback': "That's right! A <i>For Each loop</i> is used for iteration which is also referred to as repetition. ",
                   'score': 1.0,
                   'text': 'd. Repetition '}],
    'cspcode': '4.1.1D',
    'description': 'For Each is Repetition',
    'heading':'Control Stuctures',    
    'question': 'What type of control structure is a <i>For Each loop</i>? ',
    'source': 'mcsp-5',
    'type': 'Mc',
    'wrongfeedback': ''},
  { 'choices': [ { 'feedback': 'No. That is not correct. Data packets sent over the Internet can take different routes to their destination.',
                   'score': 0.0,
                   'text': 'True'},
                 { 'feedback': "That's right! Data packets sent over the Internet have different possible routes that they can take to get to their destination.",
                   'score': 1.0,
                   'text': 'False'}],
    'cspcode': '6.2.2F',
    'description': 'Packet switching - dedicated route',
    'heading':'Internet',    
    'question': 'True or False: For every packet of data sent over the Internet, there is only one route it can take to reach its destination. ',
    'source': 'mcsp-7',
    'type': 'Mc',
    'wrongfeedback': ''},
  { 'choices': [ { 'feedback': "Sorry, while an if/else block could be used to quit and app, <i>under certain conditions</i> this answer is not general enough.",
                   'score': -1.0,
                   'text': "To stop the app."},
                 { 'feedback': 'Sorry. You would need a loop block, not an if/else block, to perform repetition.',
                   'score': -1.0,
                   'text': 'To repeat a sequence of statements. '},
                 { 'feedback': 'True. For example to check whether a sound is playing or a number has a certain value.',
                   'score': 0.5,
                   'text': 'To check if a certain condition is True or False. '},
                 { 'feedback': 'True. Depending on whether the condition in the If statement is True or False, the If/else block tells the app which path to take in the code. ',
                   'score': 0.5,
                   'text': 'To tell the app which path to take in the code. '}],
    'cspcode': '4.1.1C',
    'description': 'Purpose of If/Else Blocks',
    'heading':'Algorithms',    
    'question': 'Generally speaking, what is an  <b><i>If/else </i></b>block or statement used for when programming an app?',
    'source': 'mcsp-3',
    'type': 'Ma',
    'wrongfeedback': ''},
  { 'choices': [ { 'feedback': 'Correct, an example of <i>procedural abstraction</i> would be a procedure that performs a certain task, such as a <i>sum</i> procedure that totals up a list of numbers. An example of <i>data abstraction</i> would be a list, that organizes its data in a sequence from first to last element.', 
                   'score': 1.0, 
                   'text': 'True'},
                 { 'feedback': 'Sorry. Try again.',
                   'score': 0.0,
                   'text': 'False'}],
    'cspcode': '2.1.1A',
    'description': 'Abstraction Examples in CS',
    'heading':'Abstraction',
    'question': 'True or False: Two examples of abstraction in Computer Science are Data Abstraction and Procedural Abstraction. \n',
    'source': 'mcsp-4',
    'type': 'Mc',
    'wrongfeedback': ''},
  { 'choices': [ { 'feedback': 'No. Not all big data sets contain very large numbers.',
                   'score': 0.0,
                   'text': 'data sets that contain very large numbers '},
                 { 'feedback': 'Not all big data sets are owned by big corporations such as banks or oil companies. Some are owned by the government, some by individuals.',
                   'score': 0.0,
                   'text': 'data sets that are owned by a big corporation '},
                 { 'feedback': 'Not all big data sets are stored in the cloud. Some companies save their Big Data in Excel spreadsheets on a hard drive in other databases.',
                   'score': 0.0,
                   'text': 'data sets that are stored in the cloud '},
                 { 'feedback': "That's right! Big data sets are extremely large collections of data that can be analyzed computationally to reveal patterns. The data may be scientific data, medical data, consumer data, and so on.",
                   'score': 1.0,
                   'text': 'very large data sets that contain many megabytes or gigabytes or even terabytes of data'}],
    'cspcode': '3.2.1B',
    'description': 'Big Data Definition',
    'heading':'Big Data',    
    'question': 'The term <b><i>Big Data</i></b> refers to _________________.',
    'source': 'mcsp-6',
    'type': 'Mc',
    'wrongfeedback': ''},
  { 'choices': [ { 'feedback': "Yes, to think of a simple example, if you were using 4 bits to represent numbers you wouldn't be able to represent the number 17, so you wouldn't be able to add 17 + 8.   Modern computers use 32 or 64 bits to represent whole numbers, which are called <i>integers</i>.  With 32 bits, you can represent 2<sup>32</sup> different values. That's 4,294,967,296, more than 4 billion values.  But, of course, there are still numbers that would cause overflow errors -- e.g., 4,300,000,000 could not be represented using 32 bits.  This potential for overflow error is a necessary implication of using a <i><b>finite</b></i> representation to model the <i><b>infinite</b></i> concept of number. ",
                   'score': 1.0,
                   'text': 'True.'},
                 { 'feedback': "This is challenging, but rewarding! Using a fixed number of bits to represent numbers does limit the range of problems you can solve.  For example, if you were using 4 bits to represent numbers you wouldn't be able to represent the number 17, so you wouldn't be able to add 17 + 8.  Modern computers use 32 or 64 bits to represent whole numbers, which are called <i>integers</i>.  With 32 bits, you can represent 2<sup>32</sup> different values. That's 4,294,967,296, more than 4 billion values.  But, of course, there are still numbers that would cause overflow errors -- e.g., 4,300,000,000 could not be represented using 32 bits.  This potential for overflow error is a necessary implication of using a <i><b>finite</b></i> representation to model the <i><b>infinite</b></i> concept of number. ",
                   'score': 0.0,
                   'text': 'False'}],
    'cspcode': '2.1.2B',
    'description': 'Binary numbers fixed number of bits',
    'heading':'Binary Numbers',    
    'question': 'True or False. Using a fixed number of bits to represent numbers limits the range of values and hence limits the range of problems that can be solved with that representation. ',
    'source': 'mcsp-4',
    'type': 'Mc',
    'wrongfeedback': ''},
  { 'choices': [ { 'feedback': 'The <i>Halting Problem</i> is an example of an unsolvable problem. ',
                   'score': 0.0,
                   'text': 'True'},
                 { 'feedback': 'Yes. The <i>Halting Problem</i> is an example of an undecidable problem, as Turing proved.',
                   'score': 1.0,
                   'text': 'False'}],
    'cspcode': '4.2.2D',
    'description': 'T/F All problems solvable',
    'heading':'Algorithms',
    'question': 'True or False:  An algorithm can be found for any computational problem whatsoever.',
    'source': 'mcsp-5',
    'type': 'Mc',
    'wrongfeedback': ''},
  { 'choices': [ { 'feedback': 'No. Google\'s search engine is a server.  When you access it through your browser, your browser is the client.',
                   'score': 0.0,
                   'text': 'a. client'},
                 { 'feedback': 'Correct.  Google\'s search engine is a server.  It provides a search service.', 'score': 1.0, 'text': 'b. server'}],
    'cspcode': '6.1.1C',
    'description': 'Server Example',
    'heading':'Internet',    
    'question': "Google's search engine is an example of a __________. ",
    'source': 'mcsp-7',
    'type': 'Mc',
    'wrongfeedback': ''},
  { 'choices': [ { 'feedback': "Remember that not all sorting algorithms involve comparisons of values.  For example, in bucket sort it is not necessary to compare items to each other in order to sort a list.  A nice analogy for bucket sort is the task of sorting laundry.  When you come to a T-shirt in the unsorted pile, you don't need to compare it to other items in the unsorted pile in order to place it into T-shirt pile. ",
                   'score': 0.0,
                   'text': 'how many comparisons are needed to sort the values. '},
                 { 'feedback': 'No, that would be algorithm correctness, not efficiency.',
                   'score': 0.0,
                   'text': 'whether the algorithm correctly arranges the values in order. '},
                 { 'feedback': 'The efficiency of an algorithm does not focus on whether the algorithm contains a bug.\n',
                   'score': 0.0,
                   'text': 'whether or not the algorithm contains a bug. '},
                 { 'feedback': "That's right! Efficiency in terms of sorting means how long the algorithm takes. Remember that not all sorting algorithms involve comparisons of values. And not all sort algorithms involve swapping values. Although bubble sort involves both comparing and swapping elements, bucket sort is an algorithm that involves neither comparing nor swapping.  A nice analogy for bucket sort is the task of sorting laundry.  When you come to a T-shirt in the unsorted pile, you don't need to compare it to other items in the unsorted pile in order to place it into T-shirt pile. ",
                   'score': 1.0,
                   'text': 'how long it takes to arrange the values in order. '},
                 { 'feedback': 'Not all sort algorithms involve swapping values.  For example, bubble sort does involve swapping values but the merge sort that we studied does not involve swapping. ',
                   'score': 0.0,
                   'text': 'how many swaps are needed to sort the values. '}],
    'cspcode': '4.2.4F',
    'description': 'Meaning of Sort Efficiency',
    'heading':'Sorting Algorithms',    
    'question': "In talking about sorting algorithms in general, a sort algorithm's <b><i>efficiency </i></b>refers to ______________________. ",
    'source': 'mcsp-5',
    'type': 'Mc',
    'wrongfeedback': ''},
  { 'choices': [ { 'feedback': "That's not quite right. Unless the message is very small, it would be divided into multiple packets, each of which is routed individually to the recipient's email.",
                   'score': 0.0,
                   'text': "the Gmail server puts the message into a single packet that is routed through the Internet to the recipient's email \n"},
                 { 'feedback': "That's right! Information that is sent over the Internet is first divided into packets and then each packet is routed individually over the Internet.",
                   'score': 1.0,
                   'text': "the Gmail server divides the message into packets that are routed individually over the Internet to the recipient's email"},
                 { 'feedback': "That's not quite right. The packets would be routed independently, possibly using separate paths to the recipient.",
                   'score': 0.0,
                   'text': "the Gmail server divides the message into packets that are routed through a dedicated channel to the recipient's email"},
                 { 'feedback': "That's not quite right. Unless it is very small, the message would be divided into several packets that are routed independently to the recipient's email.",
                   'score': 0.0,
                   'text': "the Gmail server puts the message into a single packet that is routed through a dedicated channel to the recipient's email"}],
    'cspcode': '6.2.2F',
    'description': 'Packetizing email message',
    'heading':'Packet switching',    
    'question': 'When you send an e-mail message using Gmail in your browser or using the Gmail app __________________. ',
    'source': 'mcsp-7',
    'type': 'Mc',
    'wrongfeedback': ''},
  { 'choices': [ { 'feedback': 'Remember, a transposition cipher rearranges the letters in the original message.  A Caesar cipher does not do that.',
                   'score': 0.0,
                   'text': 'transposition cipher'},
                 { 'feedback': 'There\'s no such thing as a bimodal cipher.',
                   'score': 0.0,
                   'text': 'bimodal cipher'},
                 { 'feedback': "That's right! A Caesar cipher substitutes letters in the message with letters from a shifted alphabet.",
                   'score': 1.0,
                   'text': 'substitution cipher'},
                 { 'feedback': 'There\'s no such thing as a substantial cipher.',
                   'score': 0.0,
                   'text': 'substantial cipher'}],
    'cspcode': '6.3.1H',
    'description': 'Caesar substitution cipher',
    'heading':'Cryptography',    
    'question': 'A Caesar cipher is an example of a ______________________.',
    'source': 'mcsp-7',
    'type': 'Mc',
    'wrongfeedback': ''},
  { 'choices': [ { 'feedback': 'Twitter is one example of a cloud application.', 'score': 0.5, 'text': 'Twitter'},
                 { 'feedback': 'No, Excel is an application that runs on a personal computer.', 
                   'score': -1.0,
                   'text': 'Excel'},
                 { 'feedback': 'G-mail is one example of a cloud application.', 'score': 0.5, 'text': 'G-mail'},
                 { 'feedback': 'No, Powerpoint is an application that runs on a personal computer.',
                   'score': -1.0,
                   'text': 'PowerPoint'}],
    'cspcode': '7.1.1D',
    'description': 'Cloud Computing Applications Examples',
    'heading':'Cloud computing',    
    'question': 'Which of the following are examples of a cloud computing application?',
    'source': 'mcsp-2',
    'type': 'Ma',
    'wrongfeedback': ''},
  { 'cspcode': '6.3.1I',
    'description': 'Breaking Caesar with frequency analysis',
    'heading':'Caesar Cipher',
    'graders': [ { 'feedback': "That's right! The secret word is <i><b>awesome</i></b>. Given the information that the most frequent letter was the letter 'i', you would figure that the shift used in this case was 4. That means that 'a' is encrypted as 'e' and 'w' is encrypted as 'a', and 'e' is encrypted as 'i', and so on. Proceeding in this way you can break the cipher.",
                   'matcher': 'case_insensitive',
                   'response': 'awesome',
                   'score': '1.0'}],
    'hint': "Remember that 'e' is the most frequent letter in English, so 'i' has probably been substituted for  'e' in the encrypted message.",
    'response':'AWESOME',
    'feedback':'That\'s right. Good job!', 
    'question': "Suppose that the following word, <i><b>EAIWSQI</b></i>, was encrypted with a Caesar cipher and when you do a frequency analysis you learn that the most frequent letter was 'i'. What is the secret word? Type your answer into the Textbox.  (Make sure there are no extra spaces in your answer.) ",
    'source': 'mcsp-7',
    'type': 'Fi',
    'wrongfeedback': "Not quite. Try again. Here's another hint, if 'i' is being substitued for 'e', the shift is 4, so 'e' is being substituted for 'a'."}
];